
@model IEnumerable<KursCollection.Models.AppUser>

<h2>All Users</h2>

@*<p><a asp-page="Create">Добавить пользователя</a></p>*@
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<button class="btn" id="block"><i class="fa fa-close"> Block</i></button>
<button class="btn" id="unblock"><i class="fa fa-arrow-circle-up"> Unblock</i></button>
<button class="btn" id="delete"><i class="fa fa-trash"> Delete</i></button>
<button class="btn" id="promote"><i class="fa fa-trash"> Make Admin</i></button>
<button class="btn" id="disrank"><i class="fa fa-trash"> Disrank</i></button>
<div class="container">

    <table class="table">
        <thead>
            <tr>
                <th><input class="form-check-input" type="checkbox" value="" id="checkbox"> check all</th>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Registrtion Date</th>
                <th>Last Login</th>
                <th>Status</th>
                <th>Admin</th>
                <th>Dark Theme</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var user in Model)
            {
            <tr>
                <td align="center"><input class="form-check-input child" type="checkbox" value="" id=@user.UserId></td>
                <td>@user.UserId</td>
                <td>@user.UserName</td>
                <td>@user.UserEmail</td>
                <td>@user.RegisterDate</td>
                <td>@user.LastActiveDate</td>
                <td>@user.UserStatus</td>
                <td>@user.IsAdmin</td>
                <td>@user.DarkTheme</td>
                <td><a href="@Url.Action("ShowUserCollectionsUWC","Collection", new {id = @user.UserId})">Go to user collections</a></td>
            </tr>
            }
        </tbody>
    </table>
</div>

<!--
    Комментарий, располагающийся между
  заголовком и текстом
-->

<script>
    var currentUserId = "@ViewBag.UserId"

    function refreshPage() {
        location.reload(true);
    }

    $(document).ready(function() {
        $('#checkbox').change(function () {
            if (this.checked) {
                $('body input:checkbox').prop('checked', true);
            } else {
                $('body input:checkbox').prop('checked', false);
            }
        })

        $('input[type="checkbox"]').on('change', function () {
            var all = $(':checkbox').not(document.getElementById("checkbox")).length;
            var actives = $(':checkbox:checked').not(document.getElementById("checkbox")).length;

            if (actives == all) {
                $('#checkbox').prop('checked', true)
            }
            else {
                $('#checkbox').prop('checked', false)
            }
        })

        //function sleep(ms) {
        //    return new Promise(resolve => setTimeout(resolve, ms));
        //}

        $('#unblock').on('click', function (e) {
            var checkedArray = [];
            $('input:checkbox:checked').each(function () {
                checkedArray.push(parseInt($(this).attr("id")));
            })
            console.log(checkedArray);

            $.ajax({

                url: "@Url.Action("Unblock")",
                type: "post",
                dataType: "json",
                contextType: "application/json",
                data: { selectedIds: checkedArray },
                traditional: true,
                success: function (data) {
                    console.log('Данные отправлены');
                    location.reload(true);
                }
            });

            $('body input:checkbox').prop('checked', false);
        });




        $('#delete').on('click', function (e) {
            var checkedArray = [];
            $('input:checkbox:checked').each(function () {
                checkedArray.push(parseInt($(this).attr("id")));
            })
            console.log(checkedArray);

            $.ajax({
                url: "@Url.Action("Delete")",
                type: "post",
                dataType: "json",
                contextType: "application/json",
                data: { selectedIds: checkedArray },
                traditional: true,
                success: function (data) {
                    console.log('Данные отправлены');
                    location.reload(true);
                }
            });
            $('body input:checkbox').prop('checked', false);
        });

        $('#block').on('click', function (e) {
            var checkedArray = [];
            $('input:checkbox:checked').each(function () {
                checkedArray.push(parseInt($(this).attr("id")));
            })
            console.log(checkedArray);

            $.ajax({
                url: "@Url.Action("Block")",
                type: "post",
                dataType: "json",
                contextType: "application/json",
                data: { selectedIds: checkedArray },
                traditional: true,
                success: function (data) {
                    console.log('Данные отправлены');
                    refreshPage();
                }
            });
            //sleep(1000).then(() => { clocation.reload(true); });

            $('body input:checkbox').prop('checked', false);
        });

        $('#promote').on('click', function (e) {
            var checkedArray = [];
            $('input:checkbox:checked').each(function () {
                checkedArray.push(parseInt($(this).attr("id")));
            })
            console.log(checkedArray);

            $.ajax({
                url: "@Url.Action("Promote")",
                type: "post",
                dataType: "json",
                contextType: "application/json",
                data: { selectedIds: checkedArray },
                traditional: true,
                success: function (data) {
                    console.log('Данные отправлены');
                    refreshPage();
                }
            });
            //sleep(1000).then(() => { clocation.reload(true); });

            $('body input:checkbox').prop('checked', false);
        });

        $('#disrank').on('click', function (e) {
            var checkedArray = [];
            $('input:checkbox:checked').each(function () {
                checkedArray.push(parseInt($(this).attr("id")));
            })
            console.log(checkedArray);

            $.ajax({
                url: "@Url.Action("Disrank")",
                type: "post",
                dataType: "json",
                contextType: "application/json",
                data: { selectedIds: checkedArray },
                traditional: true,
                success: function (data) {
                    console.log('Данные отправлены');
                    console.log(checkedArray.indexOf(currentUserId) == -1);
                    if (checkedArray.indexOf(currentUserId) == -1) {
                        console.log('1');
                        window.location.replace('/');
                        location.href = '/';
                    }
                    else {
                        console.log('2');
                        refreshPage();
                    }
                }
            });
            //sleep(1000).then(() => { clocation.reload(true); });

            $('body input:checkbox').prop('checked', false);
        });

    })
</script>

